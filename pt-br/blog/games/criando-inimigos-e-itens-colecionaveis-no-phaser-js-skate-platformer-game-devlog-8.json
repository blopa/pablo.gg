{"html":"<p>Fala galera, estou de volta com outro game devlog, demorei um pouco para fazer este tiveram algumas coisas que eu realmente não sabia fazer (e ainda não sei). Veja o video abaixo.</p>\n<p></p><div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.42857142857143%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\"> <div class=\"embedVideo-container\"> <iframe title=\"\" src=\"https://www.youtube.com/embed/I6btT6AHv78?rel=0\" class=\"embedVideo-iframe\" style=\"border:0; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" loading=\"eager\" allowfullscreen=\"\" sandbox=\"allow-same-origin allow-scripts allow-popups\"></iframe> </div> </div><p></p>\n<p>Agora vamos dar uma olhada no código, lembra do meu loop na variavel <code class=\"language-text\">dataLayer</code>? É aqui que vamos adicionar nossos novos objetos.</p>\n<div class=\"copy-code-block\"><button tabindex=\"0\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copiar</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// in the scene create function</span>\n<span class=\"token keyword\">const</span> dataLayer <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getObjectLayer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndataLayer<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> width <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'coin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// TODO add coin logic here</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'box'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'long_box'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// TODO add box logic here</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'enemy2'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// TODO add enemy logic here</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>A primeira coisa nova são os itens colecionáveis, que é bem simples, tudo o que eu precisei fazer foi instanciar um novo GameObject e destruí-lo quando ele colidir com o hero.</p>\n<div class=\"copy-code-block\"><button tabindex=\"1\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copiar</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'coin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> coin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">scene</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">overlap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token punctuation\">,</span> coin<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        coin<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>Agora, para a caixa, eu queria que ela ficasse completamente parada, a menos que o hero começasse a empurrá-la. Se eu simplesmente habilitasse o Arcade Physics nas configurações padrão, o hero iria exercer uma força na caixa, e a caixa uma força no hero, e fica algo assim:</p>\n<p><img src=\"/94a2464e81d64e9716fa39fd0d9a6470/bouncing-physics.gif\" alt=\"Física de pula-pula\" title=\"poin poin poin\"></p>\n<p>Eu precisava que a caixa não exercesse nenhuma força no hero, e para fazer isso eu estou usando <code class=\"language-text\">this.body.setAllowGravity(false)</code> e <code class=\"language-text\">this.body.setImmovable(true)</code>, como você pode ver abaixo:</p>\n<div class=\"copy-code-block\"><button tabindex=\"2\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copiar</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> scene<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> asset<span class=\"token punctuation\">,</span> frame <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> asset<span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// set physics</span>\n    scene<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">existing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowGravity</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">setImmovable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">setAccelerationY</span><span class=\"token punctuation\">(</span>\n        scene<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>gravity<span class=\"token punctuation\">.</span>y\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">time<span class=\"token punctuation\">,</span> delta</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> gravityY <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>gravity<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">setAccelerationY</span><span class=\"token punctuation\">(</span>gravityY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>acceleration<span class=\"token punctuation\">.</span>y <span class=\"token operator\">!==</span> gravityY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>Agora se você acha que aquela gambiarra na função <code class=\"language-text\">update</code> foi a pior parte, mermão, você está enganado. Deixe-me te mostrar o que chamo de “a doideira da colisão”.</p>\n<div class=\"copy-code-block\"><button tabindex=\"3\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copiar</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'box'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'long_box'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> box<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'box'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        box <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">scene</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n            x<span class=\"token punctuation\">,</span>\n            y<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        box <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LongBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">scene</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n            x<span class=\"token punctuation\">,</span>\n            y<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Add colliders that forces the box to stop</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">collider</span><span class=\"token punctuation\">(</span>dynamicLayers<span class=\"token punctuation\">.</span>ground<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        box<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">collider</span><span class=\"token punctuation\">(</span>dynamicLayers<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        box<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">collider</span><span class=\"token punctuation\">(</span>mapGroundColliders<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        box<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">collider</span><span class=\"token punctuation\">(</span>mapElementsColliders<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        box<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Handles pushing the box</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">collider</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>touching<span class=\"token punctuation\">.</span>right\n            <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>touching<span class=\"token punctuation\">.</span>left\n        <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n            box<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">setVelocityX</span><span class=\"token punctuation\">(</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>touching<span class=\"token punctuation\">.</span>left\n            <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>touching<span class=\"token punctuation\">.</span>right\n        <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n            box<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">setVelocityX</span><span class=\"token punctuation\">(</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>E por último o inimigo, que é praticamente o mesmo que a <code class=\"language-text\">coin</code>, mas ao invés de destruir o inimigo na colisão, eu faço o hero ficar piscando por uns segundos.</p>\n<div class=\"copy-code-block\"><button tabindex=\"4\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copiar</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'enemy2'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> enemy2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Enemy2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n       <span class=\"token literal-property property\">scene</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// add hero blinking effect</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">overlap</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token punctuation\">,</span>\n        enemy2<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">objectA<span class=\"token punctuation\">,</span> objectB</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tweens<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">targets</span><span class=\"token operator\">:</span> player<span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">alpha</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">ease</span><span class=\"token operator\">:</span> <span class=\"token string\">'Cubic.easeOut'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">repeat</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">yoyo</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>E por hoje é isso! Fique ligado na próxima semana, quando vou mostrar como construir a Inteligência Artificial do inimigo. Não esqueça de curtir o meu vídeo e se inscrever no meu canal 😊.</p>","path":"/pt-br/blog/games/criando-inimigos-e-itens-colecionaveis-no-phaser-js-skate-platformer-game-devlog-8/","title":"Criando inimigos e itens colecionáveis no Phaser JS - Skate Platformer Game Devlog #08","language":"pt-br","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTAtMjJUMDA6MDA6MDAuMDAwWg==","comments":[],"relatedPosts":[{"path":"/pt-br/blog/games/criando-um-build-para-celular-para-o-meu-jogo-com-o-phaser-js-game-devlog-23/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDktMDlUMDA6MDA6MDAuMDAwWg==","title":"Criando um build para celular para o meu jogo com o Phaser JS - Game Devlog #23","date":"2021-09-09T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-plataformas-para-o-meu-jogo-em-phaser-js-game-devlog-22/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDgtMjhUMDA6MDA6MDAuMDAwWg==","title":"Criando plataformas para o meu jogo em Phaser JS - Game Devlog #22","date":"2021-08-28T00:00:00.000Z"},{"path":"/pt-br/blog/games/escondendo-partes-do-mapa-com-o-phaser-js-game-devlog-21/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDctMDZUMDA6MDA6MDAuMDAwWg==","title":"Escondendo partes do mapa com o Phaser JS - Game Devlog #21","date":"2021-07-06T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-estalactites-que-caem-com-phaser-js-game-devlog-20/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMjhUMDA6MDA6MDAuMDAwWg==","title":"Criando estalactites que caem com Phaser JS - Game Devlog #20","date":"2021-06-28T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-uma-monkey-bar-para-se-pendurar-com-o-phaser-js-game-devlog-19/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMTlUMDA6MDA6MDAuMDAwWg==","title":"Criando uma \"Monkey Bar\" para se pendurar com o Phaser JS - Game Devlog #19","date":"2021-06-19T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-um-pogo-attack-com-o-phaser-js-game-devlog-17/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDQtMjRUMDA6MDA6MDAuMDAwWg==","title":"Criando um \"pogo-attack\" com o Phaser JS - Game Devlog #17","date":"2021-04-24T00:00:00.000Z"},{"path":"/pt-br/blog/games/adicionando-transicao-ao-carregar-uma-fase-no-phaser-js-skate-platformer-game-devlog-16/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTItMjlUMDA6MDA6MDAuMDAwWg==","title":"Adicionando transição ao carregar uma fase no Phaser JS - Game Devlog #16","date":"2020-12-29T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-uma-ai-mais-inteligente-e-performatica-no-phaser-js-skate-platformer-game-devlog-15/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTItMTVUMDA6MDA6MDAuMDAwWg==","title":"Criando uma AI mais inteligente e performática no Phaser JS - Game Devlog #15","date":"2020-12-15T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-clima-chuvoso-no-phaser-js-skate-platformer-game-devlog-14/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTItMDlUMDA6MDA6MDAuMDAwWg==","title":"Criando clima chuvoso no Phaser JS - Skate Platformer Game Devlog #14","date":"2020-12-09T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-uma-loading-screen-e-traduzindo-o-meu-jogo-no-phaser-js-skate-platformer-game-devlog-13/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTEtMjlUMDA6MDA6MDAuMDAwWg==","title":"Criando uma loading screen e traduzindo o meu jogo no Phaser JS - Skate Platformer Game Devlog #13","date":"2020-11-29T00:00:00.000Z"}]}