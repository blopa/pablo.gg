{"html":"<p>Fala galera! Para o game devlog de hoje, vou mostrar mais detalhes da AI dos inimigos que implementei.</p>\n<p></p><div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.42857142857143%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\"> <div class=\"embedVideo-container\"> <iframe title=\"\" src=\"https://www.youtube.com/embed/9vocKXNKNjk?rel=0\" class=\"embedVideo-iframe\" style=\"border:0; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" loading=\"eager\" allowfullscreen=\"\" sandbox=\"allow-same-origin allow-scripts allow-popups\"></iframe> </div> </div><p></p>\n<p>Eu decidi criar algumas mixin functions para a lógica de inteligência artificial, o que significa que preciso chamar a função dando bind à classe que está chamando ela, para isso, estou usando o <a href=\"https://github.com/tc39/proposal-bind-operator\" target=\"_blank\" rel=\"noreferrer\">“bind operator” do ES7</a> para que eu possa chamar a função tipo <code class=\"language-text\">this::someExternalFunction()</code>. Outra maneira de fazer isso seria executando <code class=\"language-text\">Object.assign(this, { someExternalFunction })</code> dentro do constructor, e então chame a função como se ela fosse um método de classe, tipo <code class=\"language-text\">this.someExternalFunction()</code>, desse jeito você não precisa usar o bind operator.</p>\n<div class=\"copy-code-block\"><button tabindex=\"0\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copiar</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">time<span class=\"token punctuation\">,</span> delta</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token function\">platformWalkingBehavior</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>Para a lógica de dentro do <code class=\"language-text\">platformWalkingBehavior</code>, eu fiz da maneira mais simples possível, mas ainda preciso melhorar ela um pouco para ter uma eficiência melhor quando muitos inimigos estão na tela. Primeiro eu verifico se o inimigo tem um tile de chão colidível na frente dele, se tiver, significa que pode continuar andando. Eu também verifico se há algum tile colidível bem na frente do inimigo, se houver, significa que o inimigo deve virar e andar na outra direção. Veja o código abaixo:</p>\n<div class=\"copy-code-block\"><button tabindex=\"1\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copiar</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">platformWalkingBehavior</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// checks if the next ground tile is collidable</span>\n    <span class=\"token keyword\">const</span> nextGroundTile <span class=\"token operator\">=</span> <span class=\"token function\">isNextGroundTileCollidable</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>touchingDownObject<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">.</span>tilemapLayer<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'left'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// checks if the next tile is collidable</span>\n    <span class=\"token keyword\">const</span> nextTile <span class=\"token operator\">=</span> <span class=\"token function\">isNextTileCollidable</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>touchingDownObject<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">.</span>tilemapLayer<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'left'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>nextGroundTile <span class=\"token operator\">||</span> nextTile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">setVelocityX</span><span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">-</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isNextGroundTileCollidable</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">gameObject<span class=\"token punctuation\">,</span>\n    dynamicLayer<span class=\"token punctuation\">,</span>\n    direction <span class=\"token operator\">=</span> <span class=\"token constant\">FACING_RIGHT</span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> width <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span><span class=\"token function\">getBounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> posX <span class=\"token operator\">=</span> direction <span class=\"token operator\">===</span> <span class=\"token constant\">FACING_RIGHT</span> <span class=\"token operator\">?</span> x <span class=\"token operator\">+</span> width <span class=\"token operator\">:</span> x <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> tile <span class=\"token operator\">=</span> dynamicLayer<span class=\"token punctuation\">.</span><span class=\"token function\">getTileAtWorldXY</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> tile<span class=\"token operator\">?.</span>properties<span class=\"token operator\">?.</span>collideUp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isNextTileCollidable</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">gameObject<span class=\"token punctuation\">,</span>\n    dynamicLayer<span class=\"token punctuation\">,</span>\n    direction <span class=\"token operator\">=</span> <span class=\"token constant\">FACING_RIGHT</span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">,</span> height <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span><span class=\"token function\">getBounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> posX <span class=\"token operator\">=</span> direction <span class=\"token operator\">===</span> <span class=\"token constant\">FACING_RIGHT</span> <span class=\"token operator\">?</span> x <span class=\"token operator\">+</span> width <span class=\"token operator\">:</span> x <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> tile <span class=\"token operator\">=</span> dynamicLayer<span class=\"token punctuation\">.</span><span class=\"token function\">getTileAtWorldXY</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direction <span class=\"token operator\">===</span> <span class=\"token constant\">FACING_RIGHT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> tile<span class=\"token operator\">?.</span>properties<span class=\"token operator\">?.</span>collideLeft<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> tile<span class=\"token operator\">?.</span>properties<span class=\"token operator\">?.</span>collideRight<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>E é assim que fica no jogo:</p>\n<p><img src=\"/537f29d5bf323126defd6f9011d39ab5/enemy-walking-on-platform.gif\" alt=\"Enemy walking on platform\"></p>\n<p>Por hoje é isso, não esqueça de curtir meu vídeo e se inscrever no meu canal.</p>","path":"/pt-br/blog/games/criando-inteligencia-artificial-ai-dos-inimigos-no-phaser-js-skate-platformer-game-devlog-9/","title":"Criando inteligência artificial (AI) dos inimigos no Phaser JS - Skate Platformer Game Devlog #09","language":"pt-br","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTAtMzBUMDA6MDA6MDAuMDAwWg==","comments":[],"relatedPosts":[{"path":"/pt-br/blog/games/criando-uma-ai-mais-inteligente-e-performatica-no-phaser-js-skate-platformer-game-devlog-15/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTItMTVUMDA6MDA6MDAuMDAwWg==","title":"Criando uma AI mais inteligente e performática no Phaser JS - Game Devlog #15","date":"2020-12-15T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-um-build-para-celular-para-o-meu-jogo-com-o-phaser-js-game-devlog-23/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDktMDlUMDA6MDA6MDAuMDAwWg==","title":"Criando um build para celular para o meu jogo com o Phaser JS - Game Devlog #23","date":"2021-09-09T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-plataformas-para-o-meu-jogo-em-phaser-js-game-devlog-22/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDgtMjhUMDA6MDA6MDAuMDAwWg==","title":"Criando plataformas para o meu jogo em Phaser JS - Game Devlog #22","date":"2021-08-28T00:00:00.000Z"},{"path":"/pt-br/blog/games/escondendo-partes-do-mapa-com-o-phaser-js-game-devlog-21/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDctMDZUMDA6MDA6MDAuMDAwWg==","title":"Escondendo partes do mapa com o Phaser JS - Game Devlog #21","date":"2021-07-06T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-estalactites-que-caem-com-phaser-js-game-devlog-20/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMjhUMDA6MDA6MDAuMDAwWg==","title":"Criando estalactites que caem com Phaser JS - Game Devlog #20","date":"2021-06-28T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-uma-monkey-bar-para-se-pendurar-com-o-phaser-js-game-devlog-19/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMTlUMDA6MDA6MDAuMDAwWg==","title":"Criando uma \"Monkey Bar\" para se pendurar com o Phaser JS - Game Devlog #19","date":"2021-06-19T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-um-pogo-attack-com-o-phaser-js-game-devlog-17/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDQtMjRUMDA6MDA6MDAuMDAwWg==","title":"Criando um \"pogo-attack\" com o Phaser JS - Game Devlog #17","date":"2021-04-24T00:00:00.000Z"},{"path":"/pt-br/blog/games/adicionando-transicao-ao-carregar-uma-fase-no-phaser-js-skate-platformer-game-devlog-16/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTItMjlUMDA6MDA6MDAuMDAwWg==","title":"Adicionando transição ao carregar uma fase no Phaser JS - Game Devlog #16","date":"2020-12-29T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-clima-chuvoso-no-phaser-js-skate-platformer-game-devlog-14/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTItMDlUMDA6MDA6MDAuMDAwWg==","title":"Criando clima chuvoso no Phaser JS - Skate Platformer Game Devlog #14","date":"2020-12-09T00:00:00.000Z"},{"path":"/pt-br/blog/games/criando-uma-loading-screen-e-traduzindo-o-meu-jogo-no-phaser-js-skate-platformer-game-devlog-13/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTEtMjlUMDA6MDA6MDAuMDAwWg==","title":"Criando uma loading screen e traduzindo o meu jogo no Phaser JS - Skate Platformer Game Devlog #13","date":"2020-11-29T00:00:00.000Z"}]}