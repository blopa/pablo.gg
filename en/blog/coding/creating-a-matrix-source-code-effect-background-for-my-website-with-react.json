{"html":"<p>To celebrate the release of the <a href=\"https://www.youtube.com/watch?v=9ix7TUGVYIo\" target=\"_blank\" rel=\"noreferrer\">Matrix 4 trailer</a>, I want to add a Matrix Source-Code effect background to this website, which is already deployed, and you can test it by using the Konami Code ðŸ‘€</p>\n<p><img src=\"/220e1bfcd62b78de2b2c54284481f483/the-matrix-source-code-effect.gif\" alt=\"The Matrix Source-Code effect\"></p>\n<h2 id=\"how-to-do-it-with-javascript\" style=\"position:relative;\"><a href=\"#how-to-do-it-with-javascript\" aria-label=\"how to do it with javascript permalink\" class=\"post-headers-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to do it with JavaScript?</h2>\n<p>The best way to do this sort of effect is using the HTML <code class=\"language-text\">canvas</code> element. Most of the 3D and gaming stuff you see using JavaScript will be rendered in the <code class=\"language-text\">canvas</code>.</p>\n<p>Since I was sure someone already had an article on how to do it, I researched a bit and found <a href=\"https://dev.to/gnsp/making-the-matrix-effect-in-javascript-din\" target=\"_blank\" rel=\"noreferrer\">this article that shows how to do it with vanilla JavaScript</a>, so letâ€™s adapt Ganeshâ€™s code to a React functional component.</p>\n<h2 id=\"the-code\" style=\"position:relative;\"><a href=\"#the-code\" aria-label=\"the code permalink\" class=\"post-headers-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The code</h2>\n<p>The React functional component is just a wrapper for the code, which will be set up in the <code class=\"language-text\">useEffect</code> hook. Iâ€™ve also added some styles to the <code class=\"language-text\">canvas</code> element to make it the background of my blog.</p>\n<div class=\"copy-code-block\"><button tabindex=\"0\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MatrixBackground</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> timeout <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Ganesh's code go here</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>canvas<span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div\n            style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// custom styles to make it show up in the background</span>\n                <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000000'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> <span class=\"token string\">'hidden'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token string\">'fixed'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">zIndex</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>canvas\n                ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>canvas<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MatrixBackground<span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>For the <code class=\"language-text\">useEffect</code> with the code, it is simply a copy and paste of the original code, with an additional <code class=\"language-text\">return</code> statement to clear the <code class=\"language-text\">setInterval</code> loop being called.</p>\n<div class=\"copy-code-block\"><button tabindex=\"1\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>offsetWidth<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">;</span>\n    canvas<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n    canvas<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\n    context<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">;</span>\n    context<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// calculate how many 'lines' to show and animate</span>\n    <span class=\"token keyword\">const</span> columns <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">/</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> yPositions <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> columns <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    context<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">;</span>\n    context<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">matrixEffect</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        context<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#0001'</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        context<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#0f0'</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> <span class=\"token string\">'15pt monospace'</span><span class=\"token punctuation\">;</span>\n\n        yPositions<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">y<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> index <span class=\"token operator\">*</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n            context<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&gt;</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                yPositions<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                yPositions<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> interval <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>matrixEffect<span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>canvas<span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>You can find the full code in <a href=\"https://gist.github.com/blopa/7ba2d74c9405ead1ac9875dbd8a2302d\" target=\"_blank\" rel=\"noreferrer\">this GitHub Gist</a>. Donâ€™t forget to star âœ¨ ðŸ˜ƒ</p>","path":"/en/blog/coding/creating-a-matrix-source-code-effect-background-for-my-website-with-react/","title":"Creating a Matrix Source-Code effect background for my website with React","language":"en","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIxLTA5LTE2VDAwOjAwOjAwLjAwMFo=","comments":[],"relatedPosts":[{"path":"/en/blog/coding/my-blog-now-has-stories-and-im-not-sure-why/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIzLTA5LTA0VDAwOjAwOjAwLjAwMFo=","title":"My blog now has Stories, and I'm not sure why","date":"2023-09-04T00:00:00.000Z"},{"path":"/en/blog/coding/creating-a-startup-with-github-actions-and-google-forms/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIyLTA5LTEzVDAwOjAwOjAwLjAwMFo=","title":"Creating a Startup with GitHub Actions and Google Forms","date":"2022-09-13T00:00:00.000Z"},{"path":"/en/blog/coding/how-to-get-the-redux-state-from-a-react-18-production-build-via-the-browsers-console/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIyLTA4LTIxVDAwOjAwOjAwLjAwMFo=","title":"How to get the Redux State in a React 18 production build via the browser's console","date":"2022-08-21T00:00:00.000Z"},{"path":"/en/blog/coding/how-to-get-the-redux-state-from-a-production-build-via-the-browsers-console/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIyLTAyLTIwVDAwOjAwOjAwLjAwMFo=","title":"How to get the Redux State in production via the browser's console","date":"2022-02-20T00:00:00.000Z"},{"path":"/en/blog/coding/how-to-import-gatsby-posts-into-medium-with-gist-code-snippets/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIxLTEwLTI0VDAwOjAwOjAwLjAwMFo=","title":"How to import Gatsby posts into Medium with Gist code snippets","date":"2021-10-24T00:00:00.000Z"},{"path":"/en/blog/coding/i-made-a-top-down-game-version-of-my-blog-with-phaser-and-react/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIxLTEwLTEyVDAwOjAwOjAwLjAwMFo=","title":"I made a top-down game version of my blog with Phaser and React","date":"2021-10-12T00:00:00.000Z"},{"path":"/en/blog/coding/how-to-create-a-top-down-rpg-maker-like-game-with-phaser-js-and-react/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIxLTEwLTA4VDAwOjAwOjAwLjAwMFo=","title":"How to create a top-down RPG Maker like game with Phaser JS and React","date":"2021-10-08T00:00:00.000Z"},{"path":"/en/blog/coding/creating-a-dialog-box-with-react-for-a-phaser-game/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIxLTEwLTA2VDAwOjAwOjAwLjAwMFo=","title":"Creating a dialog box with React for a Phaser game","date":"2021-10-06T00:00:00.000Z"},{"path":"/en/blog/coding/sharing-encrypted-laravel-cookies-with-next-js/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDI0LTEwLTI1VDAwOjAwOjAwLjAwMFo=","title":"Sharing encrypted Laravel cookies with Next.js","date":"2024-10-25T00:00:00.000Z"},{"path":"/en/blog/coding/musclog-leveraging-my-reactjs-experience-to-build-a-react-native-app/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDI0LTA5LTIxVDAwOjAwOjAwLjAwMFo=","title":"Musclog: Leveraging my React.js experience to build a React Native App","date":"2024-09-21T00:00:00.000Z"}]}