{"html":"<p>I constantly write about code and share code snippets in my blog posts and copy-pasting code is an essential skill for software engineers, and since selecting a text then pressing <code class=\"language-text\">CTRL + C</code> then <code class=\"language-text\">CTRL + V</code> is a lot of work, I decided to add a copy button to all my code snippets to facilitate the life of all my fellow software engineers.</p>\n<h2 id=\"possible-solutions\" style=\"position:relative;\"><a href=\"#possible-solutions\" aria-label=\"possible solutions permalink\" class=\"post-headers-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Possible solutions</h2>\n<p>The proper way to do this is by creating a plugin to tap into the Gatsby HTML generation process and access the code snippets object in the AST data structure. There is a <a href=\"https://thundermiracle.medium.com/add-copy-button-to-your-gatsbyjs-blogs-code-block-a2711364a229\" target=\"_blank\" rel=\"noreferrer\">very nice tutorial</a> by <a href=\"https://thundermiracle.medium.com/\" target=\"_blank\" rel=\"noreferrer\">@thundermiracle</a> on how to do this.</p>\n<p>Of course, I decided to do it the shitty way, which is by altering the HTML string on the <code class=\"language-text\">createPages</code> function in the <code class=\"language-text\">gatsby-node.js</code> file.</p>\n<h2 id=\"the-code\" style=\"position:relative;\"><a href=\"#the-code\" aria-label=\"the code permalink\" class=\"post-headers-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The code</h2>\n<p>Inside the loop that creates the post pages, I added the following code on <code class=\"language-text\">gatsby-node.js</code>:</p>\n<div class=\"copy-code-block\"><button tabindex=\"0\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions<span class=\"token punctuation\">,</span> graphql <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> /* some graphQL query */ </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">edge</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> alternativeHtml <span class=\"token operator\">=</span> <span class=\"token function\">generateAlternativeHtml</span><span class=\"token punctuation\">(</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        actions<span class=\"token punctuation\">.</span><span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./src/templates/PostTemplate.jsx</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> alternativeHtml <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>For the <code class=\"language-text\">generateAlternativeHtml</code> function I will use the <a href=\"https://www.npmjs.com/package/jsdom\" target=\"_blank\" rel=\"noreferrer\">jsdom</a> package to parse the HTML string and convert it to a DOM object and use the <code class=\"language-text\">querySelectorAll</code> method to find all the code snippets and add the copy button to them.</p>\n<div class=\"copy-code-block\"><button tabindex=\"1\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">generateAlternativeHtml</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">html</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> dom <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSDOM</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> document <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> dom<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> codeSnippets <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.gatsby-highlight'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    codeSnippets<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">codeSnippet</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> wrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        wrapper<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy-code-block'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// add your own css styles here, css classes, etc.</span>\n        <span class=\"token keyword\">const</span> copyButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        copyButton<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'Copy'</span><span class=\"token punctuation\">;</span>\n        codeSnippet<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">afterend</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> copyButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>Now all the code snippets will have a copy button, but the button doesn’t do anything. I will add the <code class=\"language-text\">onclick</code> event handler to the copy button to copy the code snippet to the clipboard. That needs to be done in the <code class=\"language-text\">React</code> part of the code with an <code class=\"language-text\">useEffect</code> in the <code class=\"language-text\">PostTemplate.jsx</code> file.</p>\n<p>To copy the code snippet to the clipboard I will use the <a href=\"https://www.npmjs.com/package/clipboard-copy\" target=\"_blank\" rel=\"noreferrer\">clipboard-copy</a> package.</p>\n<div class=\"copy-code-block\"><button tabindex=\"2\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> copy <span class=\"token keyword\">from</span> <span class=\"token string\">'clipboard-copy'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">BlogPostTemplate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> pageContext <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> alternativeHtml <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> pageContext<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> codeSnippets <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.copy-code-block button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        codeSnippets<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elementWrapper</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            codeSnippet<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">const</span> codeSnippet <span class=\"token operator\">=</span> elementWrapper<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.gatsby-highlight'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">const</span> code <span class=\"token operator\">=</span> codeSnippet<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span>\n                <span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>section<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>markdownRemark<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>div dangerouslySetInnerHTML<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">__html</span><span class=\"token operator\">:</span> alternativeHtml <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">&gt;</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>Done! Hacky and gross, but also beautiful in many ways.</p>\n<h2 id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"post-headers-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>This solution adds a tiny bit of overhead to the Static Site Generator process and some DOM manipulation in the client, but it’s a good solution for the time being. If you’re looking for a quick and easy solution, this is the way to go.</p>\n<p>That’s it for this post. I hope you enjoyed it.</p>","path":"/en/blog/coding/adding-a-copy-button-to-code-snippets-on-gatsby-the-lazy-way/","title":"Adding a copy button to code snippets on Gatsby: The lazy way","language":"en","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIyLTA1LTA1VDAwOjAwOjAwLjAwMFo=","comments":[],"relatedPosts":[{"path":"/en/blog/coding/creating-instagram-reels-coding-tutorials-automatically-with-openais-gpt/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIzLTEyLTIwVDAwOjAwOjAwLjAwMFo=","title":"Creating Instagram Reels coding tutorials automatically with OpenAI's GPT","date":"2023-12-20T00:00:00.000Z"},{"path":"/en/blog/coding/how-to-automatically-create-thumbnails-for-your-videos-with-nodejs/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIzLTEwLTI1VDAwOjAwOjAwLjAwMFo=","title":"How to automatically create thumbnails for your videos with Node.js","date":"2023-10-25T00:00:00.000Z"},{"path":"/en/blog/coding/posting-instagram-reels-using-nodejs-and-the-art-of-overcoming-limitations/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIzLTEwLTE0VDAwOjAwOjAwLjAwMFo=","title":"Posting Instagram Reels using Node.js and the art of overcoming limitations","date":"2023-10-14T00:00:00.000Z"},{"path":"/en/blog/coding/using-google-fitness-api-to-calculate-my-tdee-and-more/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIzLTA4LTAyVDAwOjAwOjAwLjAwMFo=","title":"Using Google Fitness API to calculate my TDEE and more","date":"2023-08-02T00:00:00.000Z"},{"path":"/en/blog/coding/how-webpack-handles-dynamic-imports-with-variable-paths/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIyLTA0LTExVDAwOjAwOjAwLjAwMFo=","title":"How Webpack handles dynamic imports with variable paths","date":"2022-04-11T00:00:00.000Z"},{"path":"/en/blog/coding/create-videos-from-code-snippets-with-this-nodejs-script/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIyLTAxLTA0VDAwOjAwOjAwLjAwMFo=","title":"Create videos from code snippets with this Node.js script","date":"2022-01-04T00:00:00.000Z"},{"path":"/en/blog/games/automatically-update-the-embedded-tileset-for-all-your-tiled-game-with-a-nodejs-script/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMTAtMDJUMDA6MDA6MDAuMDAwWg==","title":"Automatically update the embedded Tileset for all your Tiled maps a Node.js script","date":"2021-10-02T00:00:00.000Z"},{"path":"/en/blog/games/automatically-generate-sprite-sheet-atlas-files-for-your-phaser-js-game-with-a-nodejs-script/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMjJUMDA6MDA6MDAuMDAwWg==","title":"Automatically generate sprite sheet atlas files for your Phaser JS game with a Node.js script","date":"2021-06-22T00:00:00.000Z"},{"path":"/en/blog/general/godammit-telegram/","postHashId":"Z2VuZXJhbHRydWVudWxsMjAyMS0wMS0zMVQwMDowMDowMC4wMDBa","title":"Godammit Telegram!","date":"2021-01-31T00:00:00.000Z"},{"path":"/en/blog/coding/tracking-my-working-hours-on-personal-projects-ssing-nodejs/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDI0LTA2LTE2VDAwOjAwOjAwLjAwMFo=","title":"Tracking my working hours on personal projects using Node.js","date":"2024-06-16T00:00:00.000Z"}]}