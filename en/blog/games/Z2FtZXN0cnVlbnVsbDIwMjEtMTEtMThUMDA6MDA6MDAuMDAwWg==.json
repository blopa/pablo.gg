{"html":"<p>On Phaser 3 you can pre-load your assets in a function called <code class=\"language-text\">preload</code> so they are ready to use when the function <code class=\"language-text\">create</code> starts. But what if you need to wait for an API request before loading an asset?</p>\n<p>Unfortunately, you canâ€™t simply make the <code class=\"language-text\">preload</code> function an <code class=\"language-text\">async</code> function and force it to wait for your API calls, but there are ways around it.</p>\n<h2 id=\"using-the-rex-await-loader-plugin\" style=\"position:relative;\"><a href=\"#using-the-rex-await-loader-plugin\" aria-label=\"using the rex await loader plugin permalink\" class=\"post-headers-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using the Rex Await Loader Plugin</h2>\n<p><a href=\"https://github.com/rexrainbow\" target=\"_blank\" rel=\"noreferrer\">rexrainbow</a> is a great developer that brings a lot to the Phaser community, with a <a href=\"https://rexrainbow.github.io/phaser3-rex-notes/docs/site/\" target=\"_blank\" rel=\"noreferrer\">documentation website full of Phaser examples</a> and a bunch of great <a href=\"https://github.com/rexrainbow/phaser4-rex-plugins\" target=\"_blank\" rel=\"noreferrer\">Phaser plugins</a>.</p>\n<p>The <a href=\"https://rexrainbow.github.io/phaser3-rex-notes/docs/site/awaitloader/\" target=\"_blank\" rel=\"noreferrer\">Rex Await Loader Plugin</a> can be loaded in the global game context by adding it to the <code class=\"language-text\">plugins</code> attribute in the Phaser config.</p>\n<div class=\"copy-code-block\"><button tabindex=\"0\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> AwaitLoaderPlugin <span class=\"token keyword\">from</span> <span class=\"token string\">'phaser3-rex-plugins/plugins/awaitloader-plugin.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> game <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phaser<span class=\"token punctuation\">.</span>Game</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>config<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">global</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'rexAwaitLoader'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">plugin</span><span class=\"token operator\">:</span> AwaitLoaderPlugin<span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>Then in the <code class=\"language-text\">preload</code> scene:</p>\n<div class=\"copy-code-block\"><button tabindex=\"1\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">preload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'path/to/image.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">rexAwait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">successCallback<span class=\"token punctuation\">,</span> failureCallback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// do stuff then call the success callback</span>\n            <span class=\"token function\">successCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'path/to/image2.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<h2 id=\"using-the-native-phaser-loader\" style=\"position:relative;\"><a href=\"#using-the-native-phaser-loader\" aria-label=\"using the native phaser loader permalink\" class=\"post-headers-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using the native Phaser Loader</h2>\n<p>To avoid loading external plugins, there is also an option to use the native Phaser Loader, as <a href=\"https://phaser.discourse.group/t/loading-audio/1306/4\" target=\"_blank\" rel=\"noreferrer\">described by yannick</a>.</p>\n<div class=\"copy-code-block\"><button tabindex=\"2\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">preload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">asyncLoader</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">loaderPlugin</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        loaderPlugin<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'filecomplete'</span><span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loaderror'</span><span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        loaderPlugin<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">doStuff</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">await</span> <span class=\"token function\">asyncLoader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'path/to/image2.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'path/to/image.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">doStuff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'path/to/image3.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>I donâ€™t know how to conclude this post so there you go, I hope this will be useful for someone out there in the internet. If this helped you in any way, donâ€™t forget to leave a comment.</p>","path":"/en/blog/games/how-to-load-assets-asynchronously-with-phaser-3/","title":"How to load assets asynchronously with Phaser 3","language":"en","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMTEtMThUMDA6MDA6MDAuMDAwWg==","comments":[{"comment":"Hi. I follow all your tutorials. And i was wondering if you can make one of how to deal with big tilemaps like open worlds","name":"NicolÃ¡s","date":"1/13/2022 15:07:23"}],"relatedPosts":[{"path":"/en/blog/coding/i-made-a-top-down-game-version-of-my-blog-with-phaser-and-react/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIxLTEwLTEyVDAwOjAwOjAwLjAwMFo=","title":"I made a top-down game version of my blog with Phaser and React","date":"2021-10-12T00:00:00.000Z"},{"path":"/en/blog/coding/how-to-create-a-top-down-rpg-maker-like-game-with-phaser-js-and-react/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIxLTEwLTA4VDAwOjAwOjAwLjAwMFo=","title":"How to create a top-down RPG Maker like game with Phaser JS and React","date":"2021-10-08T00:00:00.000Z"},{"path":"/en/blog/coding/creating-a-dialog-box-with-react-for-a-phaser-game/","postHashId":"Y29kaW5ndHJ1ZW51bGwyMDIxLTEwLTA2VDAwOjAwOjAwLjAwMFo=","title":"Creating a dialog box with React for a Phaser game","date":"2021-10-06T00:00:00.000Z"},{"path":"/en/blog/games/automatically-update-the-embedded-tileset-for-all-your-tiled-game-with-a-nodejs-script/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMTAtMDJUMDA6MDA6MDAuMDAwWg==","title":"Automatically update the embedded Tileset for all your Tiled maps a Node.js script","date":"2021-10-02T00:00:00.000Z"},{"path":"/en/blog/games/creating-a-mobile-build-of-my-phaser-js-game-game-devlog-23/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDktMDlUMDA6MDA6MDAuMDAwWg==","title":"Creating a mobile build of my Phaser JS game - Game Devlog #23","date":"2021-09-09T00:00:00.000Z"},{"path":"/en/blog/games/creating-moving-platforms-for-my-phaser-js-game-game-devlog-22/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDgtMjhUMDA6MDA6MDAuMDAwWg==","title":"Creating moving platforms for my Phaser JS game - Game Devlog #22","date":"2021-08-28T00:00:00.000Z"},{"path":"/en/blog/games/hiding-parts-of-the-map-on-phaser-js-game-devlog-21/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDctMDZUMDA6MDA6MDAuMDAwWg==","title":"Hiding parts of the map on Phaser JS - Game Devlog #21","date":"2021-07-06T00:00:00.000Z"},{"path":"/en/blog/games/creating-falling-spikes-with-phaser-js-game-devlog-20/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMjhUMDA6MDA6MDAuMDAwWg==","title":"Creating falling spikes with Phaser JS - Game Devlog #20","date":"2021-06-28T00:00:00.000Z"},{"path":"/en/blog/games/automatically-generate-sprite-sheet-atlas-files-for-your-phaser-js-game-with-a-nodejs-script/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMjJUMDA6MDA6MDAuMDAwWg==","title":"Automatically generate sprite sheet atlas files for your Phaser JS game with a Node.js script","date":"2021-06-22T00:00:00.000Z"},{"path":"/en/blog/games/hanging-on-a-monkey-bar-on-phaser-js-game-devlog-19/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMTlUMDA6MDA6MDAuMDAwWg==","title":"Hanging on a monkey bar Phaser JS - Game Devlog #19","date":"2021-06-19T00:00:00.000Z"}]}