{"html":"<p>Wassup everyone, I’m once again late with my “weekly” devlog, due to the holidays and stuff. But let’s drop the small talk and cut to the chase.</p>\n<p></p><div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.42857142857143%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\"> <div class=\"embedVideo-container\"> <iframe title=\"\" src=\"https://www.youtube.com/embed/WKK5jc3rl1w?rel=0\" class=\"embedVideo-iframe\" style=\"border:0; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" loading=\"eager\" allowfullscreen=\"\" sandbox=\"allow-same-origin allow-scripts allow-popups\"></iframe> </div> </div><p></p>\n<p>This is very simple to do, but it adds a nice polishing level to the game. First I created a new scene called <code class=\"language-text\">StagePresentationScene</code>. In it, I get the variable <code class=\"language-text\">stageName</code> and show it in the middle of the screen for 1.5 seconds.</p>\n<div class=\"copy-code-block\"><button tabindex=\"0\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Scene <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'phaser'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> handleSceneEnd <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils/scenes'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">StagePresentationScene</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Scene</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token string\">'StagePresentationScene'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initData <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cameras<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initData<span class=\"token punctuation\">.</span>stageName\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setDepth</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setOrigin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">delayedCall</span><span class=\"token punctuation\">(</span>\n            <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">handleSceneEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GameScene'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initData<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> StagePresentationScene<span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>I can access the <code class=\"language-text\">stageName</code> attribute from Tiled with a simple <code class=\"language-text\">filter</code> function.</p>\n<div class=\"copy-code-block\"><button tabindex=\"1\" type=\"button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary copy-code-button\"><span class=\"MuiButton-label\">Copy</span></button><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// stageNameProperty will be an object with a property value in it</span>\n<span class=\"token keyword\">const</span> stageNameProperty <span class=\"token operator\">=</span> stageJson<span class=\"token operator\">?.</span>properties<span class=\"token operator\">?.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">property</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> property<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token constant\">STAGE_NAME</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>This is very simple to do but makes the game way better looking.</p>\n<p><img src=\"/286f7df54e54aa88ad4967a1424de1c5/stage-presentation.gif\" alt=\"Stage transition\"></p>\n<p>And that’s it. Don’t forget to add the <code class=\"language-text\">stageName</code> property to your Tiled map properties. See you next week.</p>","path":"/en/blog/games/adding-transition-when-entering-a-stage-on-phaser-js-skate-platformer-game-devlog-16/","title":"Adding transition when entering a stage on Phaser JS - Game Devlog #16","language":"en","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTItMjlUMDA6MDA6MDAuMDAwWg==","comments":[],"relatedPosts":[{"path":"/en/blog/games/creating-a-mobile-build-of-my-phaser-js-game-game-devlog-23/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDktMDlUMDA6MDA6MDAuMDAwWg==","title":"Creating a mobile build of my Phaser JS game - Game Devlog #23","date":"2021-09-09T00:00:00.000Z"},{"path":"/en/blog/games/creating-moving-platforms-for-my-phaser-js-game-game-devlog-22/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDgtMjhUMDA6MDA6MDAuMDAwWg==","title":"Creating moving platforms for my Phaser JS game - Game Devlog #22","date":"2021-08-28T00:00:00.000Z"},{"path":"/en/blog/games/hiding-parts-of-the-map-on-phaser-js-game-devlog-21/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDctMDZUMDA6MDA6MDAuMDAwWg==","title":"Hiding parts of the map on Phaser JS - Game Devlog #21","date":"2021-07-06T00:00:00.000Z"},{"path":"/en/blog/games/creating-falling-spikes-with-phaser-js-game-devlog-20/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMjhUMDA6MDA6MDAuMDAwWg==","title":"Creating falling spikes with Phaser JS - Game Devlog #20","date":"2021-06-28T00:00:00.000Z"},{"path":"/en/blog/games/hanging-on-a-monkey-bar-on-phaser-js-game-devlog-19/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDYtMTlUMDA6MDA6MDAuMDAwWg==","title":"Hanging on a monkey bar Phaser JS - Game Devlog #19","date":"2021-06-19T00:00:00.000Z"},{"path":"/en/blog/games/creating-a-pogo-attack-with-phaser-js-game-devlog-17/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjEtMDQtMjRUMDA6MDA6MDAuMDAwWg==","title":"Creating a pogo-attack with Phaser JS - Game Devlog #17","date":"2021-04-24T00:00:00.000Z"},{"path":"/en/blog/games/creating-a-smarter-and-more-performing-ai-on-phaser-js-skate-platformer-game-devlog-15/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTItMTVUMDA6MDA6MDAuMDAwWg==","title":"Creating a smarter and more performing AI on Phaser JS - Game Devlog #15","date":"2020-12-15T00:00:00.000Z"},{"path":"/en/blog/games/creating-custom-weather-on-phaser-js-skate-platformer-game-devlog-14/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTItMDlUMDA6MDA6MDAuMDAwWg==","title":"Creating custom weather on Phaser JS - Skate Platformer Game Devlog #14","date":"2020-12-09T00:00:00.000Z"},{"path":"/en/blog/games/creating-a-loading-screen-and-adding-translation-on-phaser-js-skate-platformer-game-devlog-13/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTEtMjlUMDA6MDA6MDAuMDAwWg==","title":"Creating a loading screen and adding translation on Phaser JS - Skate Platformer Game Devlog #13","date":"2020-11-29T00:00:00.000Z"},{"path":"/en/blog/games/saving-player-progress-with-checkpoints-with-phaser-js-skate-platformer-game-devlog-12/","postHashId":"Z2FtZXN0cnVlbnVsbDIwMjAtMTEtMTlUMDA6MDA6MDAuMDAwWg==","title":"Saving player progress with checkpoints with Phaser JS - Skate Platformer Game Devlog #12","date":"2020-11-19T00:00:00.000Z"}]}